from telegram import Update
from telegram.ext import ContextTypes
import random
from data.verbs import IRREGULAR_VERBS, BASIC_VERBS
from utils.keyboards import get_verbs_menu_keyboard, get_back_to_main_keyboard

async def handle_verbs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "verbs_irregular":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤
        verbs_text = "üìñ *–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã (—Ç–æ–ø-10):*\n\n"
        verbs_text += "`–ò–Ω—Ñ–∏–Ω–∏—Ç–∏–≤    | –ü—Ä–æ—à–µ–¥—à–µ–µ   | –ü—Ä–∏—á–∞—Å—Ç–∏–µ  | –ü–µ—Ä–µ–≤–æ–¥`\n"
        verbs_text += "`-------------|-------------|------------|---------`\n"
        
        for verb in IRREGULAR_VERBS[:10]:
            verbs_text += f"`{verb['infinitive']:<12} | {verb['past']:<11} | {verb['participle']:<10} | {verb['translation']}`\n"
        
        verbs_text += "\nüí° *–°–æ–≤–µ—Ç:* –£—á–∏—Ç–µ –ø–æ 5-10 –≥–ª–∞–≥–æ–ª–æ–≤ –≤ –¥–µ–Ω—å!"
        
        await query.edit_message_text(
            text=verbs_text,
            parse_mode='Markdown',
            reply_markup=get_verbs_menu_keyboard()
        )
    
    elif query.data == "verbs_basic":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã
        verbs_text = "üî† *–û—Å–Ω–æ–≤–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö:*\n\n"
        
        for i, verb in enumerate(BASIC_VERBS[:15], 1):
            verbs_text += f"*{verb['english']}* - {verb['russian']}\n"
            verbs_text += f"   _–ü—Ä–∏–º–µ—Ä: {verb['example']}_\n\n"
        
        await query.edit_message_text(
            text=verbs_text,
            parse_mode='Markdown',
            reply_markup=get_verbs_menu_keyboard()
        )

async def send_flashcard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    
    # –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø –∫–∞—Ä—Ç–æ—á–∫–∏
    card_type = random.choice(['irregular_verb', 'basic_verb', 'phrase'])
    
    if card_type == 'irregular_verb':
        verb = random.choice(IRREGULAR_VERBS)
        text = f"""
üé¥ *–ö–∞—Ä—Ç–æ—á–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª*

üí¨ *–ò–Ω—Ñ–∏–Ω–∏—Ç–∏–≤:* {verb['infinitive']}
‚è≥ *–ü—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è:* {verb['past']}
üìù *–ü—Ä–∏—á–∞—Å—Ç–∏–µ II:* {verb['participle']}
üá∑üá∫ *–ü–µ—Ä–µ–≤–æ–¥:* {verb['translation']}
üéØ *–£—Ä–æ–≤–µ–Ω—å:* {verb['level']}

*–ü—Ä–∏–º–µ—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:*
_I {verb['infinitive']} here every day._ ‚Üí –Ø {verb['translation']} –∑–¥–µ—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
        """
    
    elif card_type == 'basic_verb':
        verb = random.choice(BASIC_VERBS)
        text = f"""
üé¥ *–ö–∞—Ä—Ç–æ—á–∫–∞: –û—Å–Ω–æ–≤–Ω–æ–π –≥–ª–∞–≥–æ–ª*

üí¨ *–ê–Ω–≥–ª–∏–π—Å–∫–∏–π:* {verb['english']}
üá∑üá∫ *–†—É—Å—Å–∫–∏–π:* {verb['russian']}
üìö *–ü—Ä–∏–º–µ—Ä:* {verb['example']}

*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!*
        """
    
    else:  # phrase
        from data.phrases import PHRASES
        category = random.choice(list(PHRASES.values()))
        phrase = random.choice(category['phrases'])
        text = f"""
üé¥ *–ö–∞—Ä—Ç–æ—á–∫–∞: –†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è —Ñ—Ä–∞–∑–∞*

üí¨ *–ê–Ω–≥–ª–∏–π—Å–∫–∏–π:* {phrase['english']}
üá∑üá∫ *–†—É—Å—Å–∫–∏–π:* {phrase['russian']}
üìù *–ö–æ–Ω—Ç–µ–∫—Å—Ç:* {phrase['context']}

*–ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–∏!*
        """
    
    keyboard = [
        [InlineKeyboardButton("üîÑ –ï—â–µ –∫–∞—Ä—Ç–æ—á–∫—É", callback_data="menu_flashcards")],
        [InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
    ]
    
    if query:
        await query.edit_message_text(
            text=text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        await update.message.reply_text(
            text=text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
